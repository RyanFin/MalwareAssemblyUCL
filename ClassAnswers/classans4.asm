section .text
extern printf
extern scanf
global main


	sumFunc:
		;; Print sum
		mov rdx, rbx
		add rdx, rcx
		mov rdi, msgSum
		mov rax, 0
		mov rsi, rdx
		call printf
		ret
	subFunc:
		;; Print sub
		mov rdx, rbx
		sub rdx, rcx
		mov rdi, msgSub
		mov rax, 0
		mov rsi, rdx
		call printf
		ret
	mulFunc:
		;; Print product
		mov rax, rbx
		mul rdx
		mov rdx, rax
		mov rdi, msgMul
		mov rax, 0
		mov rsi, rdx
		call printf
		ret
	divFunc:
		;; Print div
		mov rax, rbx
		mov rdx, 0
		div ecx
		mov rdx, rax
		mov rdi, msgDiv
		mov rax, 0
		mov rsi, rdx
		call printf
		ret
main:
		;; Print the initial string
		mov rdi, msg
		mov rax, 0
		call printf

		;; Read users' input
		mov rax, 0
		mov rdi, pattern
		mov rsi, input1
		call scanf

		;; Print second string
		mov rdi, msg2
		mov rax, 0
		call printf

		;; Read  users' input
		mov rax, 0
		mov rdi, pattern
		mov rsi, input2
		call scanf

		mov rbx, [input1]
		mov rcx, [input2]
		call sumFunc
		mov rbx, [input1]
		mov rcx, [input2]
		call subFunc
		mov rbx, [input1]
		mov rbx, [input2]
		call mulFunc
		mov rbx, [input1]
		mov rcx, [input2]
		call divFunc


section .data
	msg db 'Introduce the first number', 0xa, 0
	pattern db '%d',0
	msg2 db 'Introduce the second number', 0xa, 0
	input1 dd 0
	input2 dd 0
	msgSum db 'The sum is: %d', 0xa, 0
	msgSub db 'The subtraction is: %d', 0xa, 0
	msgMul db 'The product is: %d', 0xa, 0
	msgDiv db 'The division is: %d', 0xa, 0
